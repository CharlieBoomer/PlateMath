{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noahv\\\\Documents\\\\GIT SHIP\\\\UI Assignment\\\\Plate_Math\\\\plate_math\\\\src\\\\components\\\\AnalysisPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Analysis = _ref => {\n  _s();\n\n  let {\n    isSelected,\n    totalWeight,\n    bodyWeight,\n    langauge,\n    gender\n  } = _ref;\n  const [swr, setSwr] = useState(0);\n\n  function onRender() {\n    return setSwr({\n      totalWeight\n    } / {\n      bodyWeight\n    });\n  }\n\n  function StackedExample(now) {\n    return /*#__PURE__*/_jsxDEV(ProgressBar, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        striped: true,\n        variant: \"secondary\",\n        now: (totalWeight / bodyWeight * 100).toFixed(2),\n        label: `${(totalWeight / bodyWeight * 100).toFixed(2)}%`\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        striped: true,\n        variant: \"primary\",\n        now: (100 - totalWeight / bodyWeight * 100).toFixed(2)\n      }, 2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  }\n\n  function getLevel(percentage) {\n    if (percentage < 120) {\n      return langauge ? \"необученный\" : 'Untrained';\n    } else if (percentage >= 120 && percentage <= 175) {\n      return langauge ? \"Новичок\" : 'Novice';\n    } else if (percentage >= 175 && percentage <= 210) {\n      return langauge ? \"Средний\" : 'Intermediate';\n    } else {\n      return langauge ? \"Элита\" : 'Elite';\n    }\n  }\n\n  function getUpperLevel(percentage) {\n    if (percentage < 120) {\n      return langauge ? \"Новичок\" : 'Novice';\n    } else if (percentage >= 120 && percentage <= 175) {\n      return langauge ? \"Средний\" : 'Intermediate';\n    } else {\n      return langauge ? \"Элита\" : 'Elite';\n    }\n  }\n\n  function getDistrib(percentage) {\n    if (percentage < 120) {\n      return '50th';\n    } else if (percentage >= 120 && percentage <= 175) {\n      return '80th';\n    } else if (percentage >= 175 && percentage <= 210) {\n      return '95th';\n    } else {\n      return '99th';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"my-2\",\n        children: [langauge ? \"Ты можешь сделать\" : 'You can', \" \", isSelected, \" \", (totalWeight / bodyWeight * 100).toFixed(2), \" % \", langauge ? \"веса вашего тела\" : 'of your body weight']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"my-2\",\n        children: [langauge ? \"Помещение вас в\" : 'Putting you in the', \"  \", getDistrib(totalWeight / bodyWeight * 100), \" \", langauge ? \"процентиль\" : 'percentile']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-auto text-left\",\n          children: getLevel(totalWeight / bodyWeight * 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: StackedExample(66)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-auto text-right\",\n          children: getUpperLevel(totalWeight / bodyWeight * 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [langauge ? \"Ваш предполагаемый уровень физической подготовки:\" : 'Your estimated level of fitness is:', \" \", getLevel(totalWeight / bodyWeight * 100)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Analysis, \"hCobuYUYrpJCnKikQaJxwKaSWW4=\");\n\n_c = Analysis;\nexport default Analysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["useState","ProgressBar","Analysis","isSelected","totalWeight","bodyWeight","langauge","gender","swr","setSwr","onRender","StackedExample","now","toFixed","getLevel","percentage","getUpperLevel","getDistrib"],"sources":["C:/Users/Noahv/Documents/GIT SHIP/UI Assignment/Plate_Math/plate_math/src/components/AnalysisPage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\n\r\nconst Analysis = ({isSelected, totalWeight, bodyWeight, langauge, gender}) => {\r\n    const [swr, setSwr] = useState(0);\r\n    \r\n    function onRender(){\r\n      return setSwr({totalWeight}/{bodyWeight});\r\n    }\r\n    \r\n    \r\n    function StackedExample(now) { \r\n        return (\r\n          <ProgressBar>\r\n            <ProgressBar striped variant=\"secondary\" now={((totalWeight/bodyWeight) * 100).toFixed(2)} key={1} label={`${((totalWeight/bodyWeight) * 100).toFixed(2)}%`}/>\r\n            <ProgressBar striped variant=\"primary\" now={(100 - (totalWeight/bodyWeight) * 100).toFixed(2)} key={2} />\r\n          </ProgressBar>\r\n        );\r\n      }\r\n      function getLevel(percentage){\r\n        if (percentage <120){\r\n          return langauge?\"необученный\":'Untrained';\r\n        }else if(percentage>= 120 && percentage<= 175){\r\n          return langauge?\"Новичок\":'Novice';\r\n        }else if(percentage>= 175 && percentage<= 210){\r\n          return langauge?\"Средний\":'Intermediate';\r\n        }else{\r\n          return langauge?\"Элита\":'Elite';\r\n        }\r\n      }\r\n      function getUpperLevel(percentage){\r\n        if (percentage <120){\r\n          return langauge?\"Новичок\":'Novice';\r\n        }else if(percentage>= 120 && percentage<= 175){\r\n          return langauge?\"Средний\":'Intermediate';\r\n        }else{\r\n          return langauge?\"Элита\":'Elite';\r\n        }\r\n      }\r\n      function getDistrib(percentage){\r\n        if (percentage <120){\r\n          return '50th';\r\n        }else if(percentage>= 120 && percentage<= 175){\r\n          return '80th';\r\n        }else if(percentage>= 175 && percentage<= 210){\r\n          return '95th';\r\n        }else{\r\n          return '99th';\r\n        }\r\n      }\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n        <div className='my-5 text-center'>\r\n         <h3 className='my-2'>{langauge?\"Ты можешь сделать\":'You can'} {isSelected} {((totalWeight/bodyWeight) * 100).toFixed(2)} % {langauge?\"веса вашего тела\":'of your body weight'}</h3>\r\n         <h5 className='my-2'>{langauge?\"Помещение вас в\":'Putting you in the'}  {getDistrib(totalWeight/bodyWeight *100)} {langauge?\"процентиль\":'percentile'}</h5>\r\n         {/* {console.log(totalWeight/bodyWeight * 100)} */}\r\n         \r\n            <div className=\"row my-3\">\r\n                <div className=\"col col-md-auto text-left\">{getLevel(totalWeight/bodyWeight *100)}</div>   \r\n                <div className='col'>{StackedExample(66)}</div>\r\n                <div className=\"col col-md-auto text-right\">{getUpperLevel(totalWeight/bodyWeight *100)}</div>\r\n            </div>\r\n\r\n            <h4>{langauge?\"Ваш предполагаемый уровень физической подготовки:\":'Your estimated level of fitness is:'} {getLevel(totalWeight/bodyWeight *100)}</h4>\r\n\r\n        </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Analysis;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAGA,MAAMC,QAAQ,GAAG,QAA6D;EAAA;;EAAA,IAA5D;IAACC,UAAD;IAAaC,WAAb;IAA0BC,UAA1B;IAAsCC,QAAtC;IAAgDC;EAAhD,CAA4D;EAC1E,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,CAAD,CAA9B;;EAEA,SAASU,QAAT,GAAmB;IACjB,OAAOD,MAAM,CAAC;MAACL;IAAD,IAAc;MAACC;IAAD,CAAf,CAAb;EACD;;EAGD,SAASM,cAAT,CAAwBC,GAAxB,EAA6B;IACzB,oBACE,QAAC,WAAD;MAAA,wBACE,QAAC,WAAD;QAAa,OAAO,MAApB;QAAqB,OAAO,EAAC,WAA7B;QAAyC,GAAG,EAAE,CAAER,WAAW,GAACC,UAAb,GAA2B,GAA5B,EAAiCQ,OAAjC,CAAyC,CAAzC,CAA9C;QAAmG,KAAK,EAAG,GAAE,CAAET,WAAW,GAACC,UAAb,GAA2B,GAA5B,EAAiCQ,OAAjC,CAAyC,CAAzC,CAA4C;MAAzJ,GAAgG,CAAhG;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QAAa,OAAO,MAApB;QAAqB,OAAO,EAAC,SAA7B;QAAuC,GAAG,EAAE,CAAC,MAAOT,WAAW,GAACC,UAAb,GAA2B,GAAlC,EAAuCQ,OAAvC,CAA+C,CAA/C;MAA5C,GAAoG,CAApG;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;EACD,SAASC,QAAT,CAAkBC,UAAlB,EAA6B;IAC3B,IAAIA,UAAU,GAAE,GAAhB,EAAoB;MAClB,OAAOT,QAAQ,GAAC,aAAD,GAAe,WAA9B;IACD,CAFD,MAEM,IAAGS,UAAU,IAAG,GAAb,IAAoBA,UAAU,IAAG,GAApC,EAAwC;MAC5C,OAAOT,QAAQ,GAAC,SAAD,GAAW,QAA1B;IACD,CAFK,MAEA,IAAGS,UAAU,IAAG,GAAb,IAAoBA,UAAU,IAAG,GAApC,EAAwC;MAC5C,OAAOT,QAAQ,GAAC,SAAD,GAAW,cAA1B;IACD,CAFK,MAED;MACH,OAAOA,QAAQ,GAAC,OAAD,GAAS,OAAxB;IACD;EACF;;EACD,SAASU,aAAT,CAAuBD,UAAvB,EAAkC;IAChC,IAAIA,UAAU,GAAE,GAAhB,EAAoB;MAClB,OAAOT,QAAQ,GAAC,SAAD,GAAW,QAA1B;IACD,CAFD,MAEM,IAAGS,UAAU,IAAG,GAAb,IAAoBA,UAAU,IAAG,GAApC,EAAwC;MAC5C,OAAOT,QAAQ,GAAC,SAAD,GAAW,cAA1B;IACD,CAFK,MAED;MACH,OAAOA,QAAQ,GAAC,OAAD,GAAS,OAAxB;IACD;EACF;;EACD,SAASW,UAAT,CAAoBF,UAApB,EAA+B;IAC7B,IAAIA,UAAU,GAAE,GAAhB,EAAoB;MAClB,OAAO,MAAP;IACD,CAFD,MAEM,IAAGA,UAAU,IAAG,GAAb,IAAoBA,UAAU,IAAG,GAApC,EAAwC;MAC5C,OAAO,MAAP;IACD,CAFK,MAEA,IAAGA,UAAU,IAAG,GAAb,IAAoBA,UAAU,IAAG,GAApC,EAAwC;MAC5C,OAAO,MAAP;IACD,CAFK,MAED;MACH,OAAO,MAAP;IACD;EACF;;EAEH,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,uBACA;MAAK,SAAS,EAAC,kBAAf;MAAA,wBACC;QAAI,SAAS,EAAC,MAAd;QAAA,WAAsBT,QAAQ,GAAC,mBAAD,GAAqB,SAAnD,OAA+DH,UAA/D,OAA4E,CAAEC,WAAW,GAACC,UAAb,GAA2B,GAA5B,EAAiCQ,OAAjC,CAAyC,CAAzC,CAA5E,SAA4HP,QAAQ,GAAC,kBAAD,GAAoB,qBAAxJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAEC;QAAI,SAAS,EAAC,MAAd;QAAA,WAAsBA,QAAQ,GAAC,iBAAD,GAAmB,oBAAjD,QAAyEW,UAAU,CAACb,WAAW,GAACC,UAAZ,GAAwB,GAAzB,CAAnF,OAAmHC,QAAQ,GAAC,YAAD,GAAc,YAAzI;MAAA;QAAA;QAAA;QAAA;MAAA,QAFD,eAKI;QAAK,SAAS,EAAC,UAAf;QAAA,wBACI;UAAK,SAAS,EAAC,2BAAf;UAAA,UAA4CQ,QAAQ,CAACV,WAAW,GAACC,UAAZ,GAAwB,GAAzB;QAApD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,KAAf;UAAA,UAAsBM,cAAc,CAAC,EAAD;QAApC;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAK,SAAS,EAAC,4BAAf;UAAA,UAA6CK,aAAa,CAACZ,WAAW,GAACC,UAAZ,GAAwB,GAAzB;QAA1D;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eAWI;QAAA,WAAKC,QAAQ,GAAC,mDAAD,GAAqD,qCAAlE,OAA0GQ,QAAQ,CAACV,WAAW,GAACC,UAAZ,GAAwB,GAAzB,CAAlH;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CAlED;;GAAMH,Q;;KAAAA,Q;AAoEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}